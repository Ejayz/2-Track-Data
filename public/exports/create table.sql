-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.tbl_article
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    article_nominal bigint,
    article_min bigint,
    article_max bigint,
    number_control integer,
    is_exist boolean,
    user_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    article_name character varying COLLATE pg_catalog."default",
    customer_id bigint,
    CONSTRAINT tbl_article_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_article_max
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    length double precision,
    inside_diameter double precision,
    outside_diameter double precision,
    flat_crush double precision,
    h20 double precision,
    is_exist boolean,
    user_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tbl_article_max_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_article_min
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    length double precision,
    inside_diameter double precision,
    outside_diameter double precision,
    flat_crush double precision,
    h20 double precision,
    is_exist boolean,
    user_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tbl_article_min_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_article_nominal
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    length double precision,
    inside_diameter double precision,
    outside_diameter double precision,
    flat_crush double precision,
    h20 double precision,
    is_exist boolean,
    user_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tbl_article_nominal_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_assignee_history
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    order_form_id bigint,
    created_date timestamp with time zone,
    is_assigned boolean,
    is_exist boolean,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    user_id uuid,
    CONSTRAINT tbl_assignee_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_customer
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    first_name text COLLATE pg_catalog."default",
    middle_name text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    email text COLLATE pg_catalog."default",
    is_exist boolean,
    user_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    company_name text COLLATE pg_catalog."default",
    CONSTRAINT tbl_customer_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_laboratory
(
    id bigint NOT NULL,
    order_form_id bigint,
    flat_crush double precision,
    h20 double precision,
    is_exist boolean,
    user_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tbl_laboratory_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_measurement
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    order_form_id bigint,
    length double precision,
    inside_diameter double precision,
    outside_diameter double precision,
    flat_crush double precision,
    h20 double precision,
    radial double precision,
    number_control integer,
    remarks text COLLATE pg_catalog."default",
    is_exist boolean,
    user_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    pallete_count integer,
    CONSTRAINT tbl_measurement_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_measurement_history
(
    id bigint NOT NULL,
    order_form_id bigint,
    length double precision,
    inside_diameter double precision,
    outside_diameter double precision,
    flat_crush double precision,
    h20 double precision,
    radial double precision,
    number_control bigint,
    remarks text COLLATE pg_catalog."default",
    user_id uuid,
    is_exist boolean,
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone,
    CONSTRAINT tbl_measurement_history_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_orders_form
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    customer_id bigint,
    article_id bigint,
    assignee uuid,
    pallete_count bigint,
    is_assigned boolean,
    is_exist boolean,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    product_name text COLLATE pg_catalog."default",
    order_fabrication_control text COLLATE pg_catalog."default",
    entry_date_time timestamp with time zone,
    exit_date_time timestamp with time zone,
    CONSTRAINT tbl_orders_form_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_production
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    order_form_id bigint,
    entry_date_time timestamp with time zone,
    exit_date_time timestamp with time zone,
    is_exist boolean,
    user_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tbl_production_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_proofing
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    order_form_id bigint,
    entry_date_time timestamp with time zone,
    exit_date_time timestamp with time zone,
    num_pallets bigint,
    program_name text COLLATE pg_catalog."default",
    is_exist boolean,
    user_id uuid,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tbl_proofing_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.tbl_users
(
    uuid uuid NOT NULL DEFAULT gen_random_uuid(),
    first_name text COLLATE pg_catalog."default",
    middle_name text COLLATE pg_catalog."default",
    last_name text COLLATE pg_catalog."default",
    suffix text COLLATE pg_catalog."default",
    role text COLLATE pg_catalog."default",
    is_exist boolean DEFAULT true,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    email text COLLATE pg_catalog."default",
    is_verified boolean DEFAULT false,
    code text COLLATE pg_catalog."default",
    code_expiration timestamp with time zone,
    CONSTRAINT tbl_users_pkey PRIMARY KEY (uuid)
);

ALTER TABLE IF EXISTS public.tbl_article
    ADD CONSTRAINT tbl_article_article_max_fkey FOREIGN KEY (article_max)
    REFERENCES public.tbl_article_max (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_article
    ADD CONSTRAINT tbl_article_article_min_fkey FOREIGN KEY (article_min)
    REFERENCES public.tbl_article_min (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_article
    ADD CONSTRAINT tbl_article_article_nominal_fkey FOREIGN KEY (article_nominal)
    REFERENCES public.tbl_article_nominal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_article
    ADD CONSTRAINT tbl_article_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.tbl_customer (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_article
    ADD CONSTRAINT tbl_article_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_article_max
    ADD CONSTRAINT tbl_article_max_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_article_min
    ADD CONSTRAINT tbl_article_min_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_article_nominal
    ADD CONSTRAINT tbl_article_nominal_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_assignee_history
    ADD CONSTRAINT tbl_assignee_history_order_form_id_fkey FOREIGN KEY (order_form_id)
    REFERENCES public.tbl_orders_form (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_assignee_history
    ADD CONSTRAINT tbl_assignee_history_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_customer
    ADD CONSTRAINT tbl_customer_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_laboratory
    ADD CONSTRAINT tbl_laboratory_order_form_id_fkey FOREIGN KEY (order_form_id)
    REFERENCES public.tbl_orders_form (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_laboratory
    ADD CONSTRAINT tbl_laboratory_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_measurement
    ADD CONSTRAINT fk_order_form FOREIGN KEY (order_form_id)
    REFERENCES public.tbl_orders_form (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tbl_measurement
    ADD CONSTRAINT tbl_measurement_order_form_id_fkey FOREIGN KEY (order_form_id)
    REFERENCES public.tbl_orders_form (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_measurement
    ADD CONSTRAINT tbl_measurement_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_measurement_history
    ADD CONSTRAINT tbl_measurement_history_order_form_id_fkey FOREIGN KEY (order_form_id)
    REFERENCES public.tbl_orders_form (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_measurement_history
    ADD CONSTRAINT tbl_measurement_history_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_orders_form
    ADD CONSTRAINT tbl_orders_form_article_id_fkey FOREIGN KEY (article_id)
    REFERENCES public.tbl_article (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_orders_form
    ADD CONSTRAINT tbl_orders_form_assignee_fkey FOREIGN KEY (assignee)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_orders_form
    ADD CONSTRAINT tbl_orders_form_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.tbl_customer (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_production
    ADD CONSTRAINT tbl_production_order_form_id_fkey FOREIGN KEY (order_form_id)
    REFERENCES public.tbl_orders_form (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_production
    ADD CONSTRAINT tbl_production_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_proofing
    ADD CONSTRAINT tbl_proofing_order_form_id_fkey FOREIGN KEY (order_form_id)
    REFERENCES public.tbl_orders_form (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tbl_proofing
    ADD CONSTRAINT tbl_proofing_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.tbl_users (uuid) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;